services:

  # Node 1
  tss-node1:
    build: ../..
    container_name: tss-node1
    hostname: tss-node1
    command: ["start", "--config", "/app/node/config.yaml"]
    ports:
      - "18081:8080"  # HTTP API
      - "19095:9090"  # gRPC API
      - "14001:4001"   # P2P
    volumes:
      - ./node1:/app/node
      - tss-node1-data:/app/data
    environment:
      - TSS_CONFIG_FILE=/app/node/config.yaml
      - TSS_ENCRYPTION_PASSWORD=$${TSS_ENCRYPTION_PASSWORD:-TestPassword123!}
    networks:

      tss-network:
        ipv4_address: 172.20.0.2

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "wget", "--quiet", "--output-document=-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s


  # Node 2
  tss-node2:
    build: ../..
    container_name: tss-node2
    hostname: tss-node2
    command: ["start", "--config", "/app/node/config.yaml"]
    ports:
      - "18082:8080"  # HTTP API
      - "19096:9090"  # gRPC API
      - "14002:4001"   # P2P
    volumes:
      - ./node2:/app/node
      - tss-node2-data:/app/data
    environment:
      - TSS_CONFIG_FILE=/app/node/config.yaml
      - TSS_ENCRYPTION_PASSWORD=$${TSS_ENCRYPTION_PASSWORD:-TestPassword123!}
    networks:

      tss-network:
        ipv4_address: 172.20.0.3

    restart: unless-stopped

    depends_on:

      - tss-node1


    healthcheck:
      test: ["CMD", "wget", "--quiet", "--output-document=-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  # Node 3
  tss-node3:
    build: ../..
    container_name: tss-node3
    hostname: tss-node3
    command: ["start", "--config", "/app/node/config.yaml"]
    ports:
      - "18083:8080"  # HTTP API
      - "19097:9090"  # gRPC API
      - "14003:4001"   # P2P
    volumes:
      - ./node3:/app/node
      - tss-node3-data:/app/data
    environment:
      - TSS_CONFIG_FILE=/app/node/config.yaml
      - TSS_ENCRYPTION_PASSWORD=$${TSS_ENCRYPTION_PASSWORD:-TestPassword123!}
    networks:

      tss-network:
        ipv4_address: 172.20.0.4

    restart: unless-stopped

    depends_on:

      - tss-node1

      - tss-node2


    healthcheck:
      test: ["CMD", "wget", "--quiet", "--output-document=-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s


volumes:

  tss-node1-data:
    driver: local

  tss-node2-data:
    driver: local

  tss-node3-data:
    driver: local


networks:

  tss-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
 